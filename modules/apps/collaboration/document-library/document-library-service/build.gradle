sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {
	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "2.0"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compileOnly group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.cm", version: "1.5.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
	compileOnly group: "org.springframework", name: "spring-context", version: "4.1.9.RELEASE"
	compileOnly project(":apps:collaboration:document-library:document-library-api")
	compileOnly project(":apps:collaboration:document-library:document-library-file-rank-api")
	compileOnly project(":apps:collaboration:document-library:document-library-sync-api")
	compileOnly project(":apps:collaboration:subscription:subscription-api")
	compileOnly project(":apps:dynamic-data-mapping:dynamic-data-mapping-api")
	compileOnly project(":apps:foundation:petra:petra-model-adapter")
	compileOnly project(":apps:foundation:portal-configuration:portal-configuration-upgrade-api")
	compileOnly project(":apps:foundation:portal-instances:portal-instances-api")
	compileOnly project(":apps:foundation:portal-search:portal-search")
	compileOnly project(":apps:foundation:portal:portal-instance-lifecycle-api")
	compileOnly project(":apps:foundation:portal:portal-upgrade-api")
	compileOnly project(":apps:foundation:xstream:xstream-configurator-api")
	compileOnly project(":apps:static:portal-configuration:portal-configuration-metatype-api")
	compileOnly project(":apps:web-experience:export-import:export-import-api")
	compileOnly project(":apps:web-experience:trash:trash-api")
	compileOnly project(":core:osgi-service-tracker-collections")
	compileOnly project(":core:petra:petra-function")
	compileOnly project(":core:petra:petra-string")

	testCompile project(":core:petra:petra-lang")
	testCompile project(":core:registry-api")
}