{namespace com.liferay.layout.admin.web.FragmentEntryLinkList}

/**
 * FragmentEntryLinkList
 */
{template .render}
	{@param defaultEditorConfigurations: ?}
	{@param defaultLanguageId: string}
	{@param imageSelectorURL: string}
	{@param languageId: string}
	{@param mapping: bool}
	{@param portletNamespace: string}
	{@param spritemap: string}
	{@param translating: bool}
	{@param? dropTargetClass: string}
	{@param? hoveredFragmentEntryLinkBorder: string}
	{@param? hoveredFragmentEntryLinkId: string}
	{@param? _handleEditableChanged: any}
	{@param? _handleFragmentMove: any}
	{@param? _handleFragmentRemove: any}
	{@param? _handleMappeableFieldClicked: any}
	{@param? fragmentEntryLinks: list<[
		content: html|null,
		editableValues: ?,
		fragmentEntryLinkId: string,
		name: string
	]>}
	{@param? mappingFieldsURL: string}
	{@param? selectedMappingTypes: [
		subtype: [
			id: string,
			label: string
		],
		type: [
			id: string,
			label: string
		]
	]}
	{@param? store: ?}

	{let $entryLinksClasses kind="text"}
		fragment-entry-link-list
		{sp}{$dropTargetClass}

		{if $translating}
			{sp}translating
		{/if}

		{if $mapping}
			{sp}mapping
		{/if}
	{/let}

	<div class="{$entryLinksClasses}" ref="fragmentEntryLinks">
		{if $fragmentEntryLinks and (length($fragmentEntryLinks) > 0)}
			{foreach $fragmentEntryLink in $fragmentEntryLinks}
				{let $styleModifier kind="text"}
					{if $hoveredFragmentEntryLinkId == $fragmentEntryLink.fragmentEntryLinkId}
						{$hoveredFragmentEntryLinkBorder}
					{/if}
				{/let}
				<div data-position="{index($fragmentEntryLink)}" key="{$fragmentEntryLink.fragmentEntryLinkId}">
					{call com.liferay.layout.admin.web.FragmentEntryLink.render}
						{param content: $fragmentEntryLink.content /}
						{param defaultEditorConfigurations: $defaultEditorConfigurations /}
						{param defaultLanguageId: $defaultLanguageId /}
						{param dropTargetClass: $dropTargetClass /}
						{param editableValues: $fragmentEntryLink.editableValues /}
						{param events: [
							'editableChanged': $_handleEditableChanged,
							'mappeableFieldClicked': $_handleMappeableFieldClicked,
							'move': $_handleFragmentMove,
							'remove': $_handleFragmentRemove
						] /}
						{param fragmentEntryLinkId: $fragmentEntryLink.fragmentEntryLinkId /}
						{param styleModifier: $styleModifier /}
						{param imageSelectorURL: $imageSelectorURL /}
						{param languageId: $languageId /}
						{param name: $fragmentEntryLink.name /}
						{param portletNamespace: $portletNamespace /}
						{param ref: 'fragmentEntryLink_' + $fragmentEntryLink.fragmentEntryLinkId /}
						{param selectedMappingTypes: $selectedMappingTypes /}
						{param showMapping: $selectedMappingTypes and $mappingFieldsURL ? true : false /}
						{param spritemap: $spritemap /}
						{param store: $store /}
					{/call}
				</div>
			{/foreach}
		{else}
			{call .noFragmentsMessage /}
		{/if}
	</div>
{/template}

/**
 * No fragments message
 */
{template .noFragmentsMessage}
	<div class="taglib-empty-result-message">
		<div class="taglib-empty-result-message-header"></div>

		<div class="text-center text-muted">
			{msg desc=""}the-fragment-editor-is-empty{/msg}
		</div>
	</div>
{/template}