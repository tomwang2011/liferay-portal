<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String csvExport = "enabled-with-warning";

if (Validator.isNotNull(ddmFormAdminDisplayContext.getCSVExport())) {
	csvExport = ddmFormAdminDisplayContext.getCSVExport();
}

boolean csvExportDisabled = StringUtil.equals("disabled", csvExport);
boolean showCSVWarning = StringUtil.equals("enabled-with-warning", csvExport);
%>

<div class="hide" id="<portlet:namespace />exportFormInstance">
	<div id="<portlet:namespace />csvWarning"></div>

	<aui:select label="file-extension" name="fileExtension">

		<%
		Map<String, String> availableExportFormats = ddmFormAdminDisplayContext.getAvailableExportFormats();

		for (Map.Entry<String, String> entry : availableExportFormats.entrySet()) {
			if (Objects.equals(entry.getValue(), "csv") && csvExportDisabled) {
				continue;
			}
		%>

			<aui:option value="<%= entry.getValue() %>"><%= entry.getKey() %></aui:option>

		<%
		}
		%>

	</aui:select>
</div>

<aui:script>
	Liferay.provide(
		window,
		'<portlet:namespace />exportFormInstance',
		function(url) {
			var A = AUI();

			var form = A.Node.create('<form />');

			form.attr('method', 'POST');

			var content = A.one('#<portlet:namespace />exportFormInstance');

			var fileExtensionSelect = A.one('#<portlet:namespace />fileExtension');

			var showCSVWarning = function() {
				var csvWarning = A.one('#<portlet:namespace />csvWarning');

				if ((fileExtensionSelect.val() === 'csv') && <%= showCSVWarning %>) {
					csvWarning.show();

					new A.Alert(
						{
							bodyContent: '<liferay-ui:message key="csv-warning-message" />',
							boundingBox: '#<portlet:namespace />csvWarning',
							closeable: false,
							cssClass: 'alert-warning',
							destroyOnHide: false,
							render: true
						}
					);
				}
				else {
					csvWarning.hide();
				}
			};

			if (content) {
				if (fileExtensionSelect) {
					showCSVWarning();

					fileExtensionSelect.on('change', showCSVWarning);
				}

				form.append(content);

				content.show();
			}

			var dialog = Liferay.Util.Window.getWindow(
				{
					dialog: {
						bodyContent: form,
						cssClass: 'ddm-form-export-modal',
						resizable: false,
						toolbars: {
							footer: [
								{
									cssClass: 'btn-secondary',
									label: '<liferay-ui:message key="cancel" />',
									on: {
										click: function() {
											dialog.hide();
										}
									}
								},
								{
									cssClass: 'btn-primary',
									label: '<liferay-ui:message key="ok" />',
									on: {
										click: function() {
											submitForm(form, url, false);

											dialog.hide();
										}
									}
								}
							]
						},
						width: 600
					},
					title: '<%= UnicodeLanguageUtil.get(request, "export") %>'
				}
			);
		},
		['liferay-util-window']
	);
</aui:script>